# Copyright (c) 2020 Target Brands, Inc. All rights reserved.
#
# Use of this source code is governed by the LICENSE file in this repository.

# name of the action
name: ci

# trigger on pull_request or push events
on:
  push:
    branches:
  pull_request:

env:
  NODE_ENV: development
  USE_NODE_VER: '12.14.1'
  ELM_HOME: '${GITHUB_WORKSPACE}'
  CI: 1

# pipeline to execute
jobs:
  # ┌─┐┬  ┌┬┐   ┌─┐┌─┐┬─┐┌┬┐┌─┐┌┬┐
  # ├┤ │  │││───├┤ │ │├┬┘│││├─┤ │
  # └─┘┴─┘┴ ┴   └  └─┘┴└─┴ ┴┴ ┴ ┴
  elm-format:
    name: validate elm files
    runs-on: ubuntu-16.04

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-bin-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-bin-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.USE_NODE_VER }}

      - name: install dependencies
        run: npm i --prefer-offline --no-audit
      - name: install elm-format
        run: npm i elm-format
      - name: run elm-format
        run: npm run lint:elm

  # ┌─┐┬  ┌┬┐  ┌┬┐┌─┐┌─┐┌┬┐
  # ├┤ │  │││───│ ├┤ └─┐ │
  # └─┘┴─┘┴ ┴   ┴ └─┘└─┘ ┴
  elm-test:
    name: run elm tests
    runs-on: ubuntu-16.04

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-bin-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-bin-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.USE_NODE_VER }}

      - name: install dependencies
        run: npm i --prefer-offline --no-audit
      - name: install elm-test
        run: npm i elm-test
      - name: run elm-test
        run: npm run test

  # ┬  ┬┌┐┌┌┬┐
  # │  ││││ │
  # ┴─┘┴┘└┘ ┴
  lint:
    name: lint
    runs-on: ubuntu-16.04

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-bin-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-bin-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.USE_NODE_VER }}

      - name: install dependencies
        run: npm i --prefer-offline --no-audit
      - name: run linter
        run: npm run lint

  # ┌─┐┬ ┬┌─┐┬─┐┌─┐┌─┐┌─┐
  # │  └┬┘├─┘├┬┘├┤ └─┐└─┐
  # └─┘ ┴ ┴  ┴└─└─┘└─┘└─┘
  integration:
    name: run cypress tests
    runs-on: ubuntu-16.04
    env:
      VELA_API: 'http://localhost:8080'
      TERM: xterm

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-bin-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-bin-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.USE_NODE_VER }}

      - name: install dependencies
        run: npm i --prefer-offline --no-audit
      - name: run cypress tests
        run: npm run test:cy

  # ┌─┐┬ ┬┌┐ ┬  ┬┌─┐┬ ┬
  # ├─┘│ │├┴┐│  │└─┐├─┤
  # ┴  └─┘└─┘┴─┘┴└─┘┴ ┴
  publish:
    name: build and push to docker
    runs-on: ubuntu-16.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'go-vela/ui'
    needs: [lint, elm-format, elm-test, integration]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.USE_NODE_VER }}

      # ┌┐ ┬ ┬┬┬  ┌┬┐
      # ├┴┐│ │││   ││
      # └─┘└─┘┴┴─┘─┴┘
      - name: install dependencies
        run: npm i --prefer-offline --no-audit
      - name: run development build
        run: npm run build

      # ┌┬┐┌─┐┌─┐┬┌─┌─┐┬─┐
      #  │││ ││  ├┴┐├┤ ├┬┘
      # ─┴┘└─┘└─┘┴ ┴└─┘┴└─
      - name: push to docker
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: target/vela-ui
          cache: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
